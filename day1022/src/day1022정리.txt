예외처리

프로그램의 문법에는 오류가 없으나 실행중에 사용자의 부주의 등으로 발생하는 예기치 않는 상황을 예외라고 하며
이러한 예외를 처리하는 것을 말한다

예기치 않는 상황은 다양하다
예를 들면 정수 입력하는 자리에 문자열을 입력한다거나
어떤 숫자를 0으로 나눈다거나
배열의 인덱스를 넘은 범위를 사용한다거나... 등 많다

이러한 예외는 대체로 사용자의 부주의로 일어난다
이것을 그냥 두면 사용자들은 불평이 많다
그래서 우리는 그대로 두면 않되고 예외처리를 해야 한다

자바에서는 대부분의 예기치않은 상황에 대한 예외클래스가 이미 만들어져 있다
예를 들면 배열의 범위를 넘는 경우
ArrayIndexOutOfBoundsException 클래스형의 객체가 자동으로 생성된다

예외처리 하는 방법
try{
	예외가 발생할 만 한 명령어(들)
	
}catch(예외클래스명 변수명){
	예외가 발생되었을 때 처리할 명령어(들)
}

예외클래스들도 상속계층으로 구성되어 있으며 모든 예외들의 제일 조상은 Exception이다
==> 위의 프로그램은 실제로 프로그램의 일처리를 위한 핵심 코드는 4줄인데
예외처리까지 하다 보니 코드가 길어졌다
이런 경우 모든 예외의 조상이 Exception이니 Exception하나만 받는 catch절로도
모든 예외상황에 대하여 뭉쳐서 처리할 수 있다

필요하다면 각각의 예외에 따른 별도의 catch를 만들 수 있고
하나의 catch로 처리할 수 있다

==> catch절을 여러개 쓸 경우에는 범위가 작은 순으로 오도록 해야 한다 

finally
예외처리 발생여부를 떠나 반드시 실행하도록 하는 구문
try catch와 함께 쓸 수 있다

throw
throw는 말그대로 던지다 라는 뜻이며 예외를 강제로 던지는 것입니다. 
그러나 예외를 던지기 위해서는 던질 예외의 객체가 필요합니다.
new 연산자를 이용해 예외 객체를 만들어 던질 수 있습니다.

throws
현재 메서드를 호출한 메서드로 예외를 떠넘길 수 있습니다.
예외를 떠넘기는 방법은 다음과 같이 throws 키워드를 메서드 뒤에 붙여주면 됩니다.


